<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Core;assembly=Panuon.UI.Core"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Templates/MenuTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=SubemnuArrowIconTemplate, TypeInTargetAssembly={x:Type local:MenuHelper}}">
        <TextBlock Text="&#xe902;"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}"
                   FontFamily="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon"
                   Margin="0,0,5,0" />
    </DataTemplate>

    <DataTemplate x:Key="{ComponentResourceKey ResourceId=CheckedIconStyle, TypeInTargetAssembly={x:Type local:MenuHelper}}">
        <TextBlock Text="&#xe92e;"
                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=MenuItem}, Mode=OneWay}"
                   FontFamily="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
    </DataTemplate>
    
    <Style x:Key="{x:Static rs:StyleKeys.MenuStyle}"
           TargetType="Menu">
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding IconFontFamily, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding IconFontSize, Source={x:Static local:GlobalSettings.Setting}}" />
        <Setter Property="local:IconHelper.Margin"
                Value="5,0,0,0" />
        <Setter Property="local:ShadowHelper.BlurRadius"
                Value="15" />
        <Setter Property="local:ShadowHelper.ShadowDepth"
                Value="5" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="local:MenuHelper.TopLevelItemsPadding"
                Value="10,0" />
        <Setter Property="local:MenuHelper.TopLevelItemsHeight"
                Value="{Binding Height, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:MenuHelper.TopLevelItemsWidth"
                Value="NaN" />
        <Setter Property="local:MenuHelper.TopLevelItemsBackground"
                Value="Transparent" />
        <Setter Property="local:MenuHelper.TopLevelItemsHoverBackground"
                Value="#F1F1F1" />
        <Setter Property="local:MenuHelper.TopLevelItemsForeground"
                Value="#3E3E3E" />
        <Setter Property="local:MenuHelper.SubmenuItemsIconWidth"
                Value="{Binding Path=(local:MenuHelper.SubmenuItemsHeight), RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:MenuHelper.SubmenuItemsHeight"
                Value="30" />
        <Setter Property="local:MenuHelper.SubmenuItemsWidth"
                Value="NaN" />
        <Setter Property="local:MenuHelper.SubmenuItemsBackground"
                Value="Transparent" />
        <Setter Property="local:MenuHelper.SubmenuItemsHoverBackground"
                Value="#F1F1F1" />
        <Setter Property="local:MenuHelper.SubmenuItemsForeground"
                Value="#3E3E3E" />
        <Setter Property="local:DropDownHelper.Width"
                Value="150" />
        <Setter Property="local:DropDownHelper.Background"
                Value="White" />
        <Setter Property="local:DropDownHelper.Background"
                Value="White" />
        <Setter Property="local:DropDownHelper.BorderBrush"
                Value="LightGray" />
        <Setter Property="local:DropDownHelper.BorderThickness"
                Value="1" />
        <Setter Property="local:MenuHelper.TopLevelDropDownPlacement"
                Value="BottomRight" />
        <Setter Property="local:MenuHelper.TopLevelDropDownVerticalOffset"
                Value="0" />
        <Setter Property="local:MenuHelper.SubmenuDropDownPlacement"
                Value="RightBottom" />
        <Setter Property="local:MenuHelper.SubmenuDropDownVerticalOffset"
                Value="0" />
        <Setter Property="local:DropDownHelper.ShadowColor"
                Value="#E6E6E6" />
        <Setter Property="local:MenuHelper.TopLevelItemsSeparatorBrush"
                Value="#E6E6E6" />
        <Setter Property="local:MenuHelper.TopLevelItemsSeparatorThickness"
                Value="1" />
        <Setter Property="local:MenuHelper.SubmenuItemsSeparatorBrush"
                Value="#E6E6E6" />
        <Setter Property="local:MenuHelper.SubmenuItemsSeparatorThickness"
                Value="1" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="local:MenuHelper.SubmenuArrowIconTemplate"
                Value="{StaticResource {ComponentResourceKey ResourceId=SubemnuArrowIconTemplate, TypeInTargetAssembly={x:Type local:MenuHelper}}}" />
        <Setter Property="local:MenuHelper.CheckedIconTemplate"
                Value="{StaticResource {ComponentResourceKey ResourceId=CheckedIconStyle, TypeInTargetAssembly={x:Type local:MenuHelper}}}" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static irs:TemplateKeys.MenuTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{Binding DisabledOpacity, Source={x:Static local:GlobalSettings.Setting}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
